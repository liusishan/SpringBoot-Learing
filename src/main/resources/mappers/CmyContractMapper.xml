<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="learning.mapper.CmyContractMapper">
  <resultMap id="BaseResultMap" type="learning.model.CmyContract">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="deleted" jdbcType="VARCHAR" property="deleted" />
    <result column="op_cmy_code" jdbcType="VARCHAR" property="opCmyCode" />
    <result column="op_cmy_name" jdbcType="VARCHAR" property="opCmyName" />
    <result column="op_time" jdbcType="VARCHAR" property="opTime" />
    <result column="operator_code" jdbcType="VARCHAR" property="operatorCode" />
    <result column="operator_name" jdbcType="VARCHAR" property="operatorName" />
    <result column="reserved1" jdbcType="VARCHAR" property="reserved1" />
    <result column="reserved2" jdbcType="VARCHAR" property="reserved2" />
    <result column="reserved3" jdbcType="VARCHAR" property="reserved3" />
    <result column="reserved4" jdbcType="BIGINT" property="reserved4" />
    <result column="reserved5" jdbcType="BIGINT" property="reserved5" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="business_no" jdbcType="VARCHAR" property="businessNo" />
    <result column="contract_code" jdbcType="VARCHAR" property="contractCode" />
    <result column="contract_evidence_url" jdbcType="VARCHAR" property="contractEvidenceUrl" />
    <result column="contract_name" jdbcType="VARCHAR" property="contractName" />
    <result column="contract_oss_url" jdbcType="VARCHAR" property="contractOssUrl" />
    <result column="contract_record_type" jdbcType="VARCHAR" property="contractRecordType" />
    <result column="contract_type" jdbcType="VARCHAR" property="contractType" />
    <result column="is_valid" jdbcType="VARCHAR" property="isValid" />
    <result column="valid_time" jdbcType="VARCHAR" property="validTime" />
    <result column="contract_evidence_code" jdbcType="VARCHAR" property="contractEvidenceCode" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, deleted, op_cmy_code, op_cmy_name, op_time, operator_code, operator_name, 
    reserved1, reserved2, reserved3, reserved4, reserved5, signature, version, business_no, 
    contract_code, contract_evidence_url, contract_name, contract_oss_url, contract_record_type, 
    contract_type, is_valid, valid_time, contract_evidence_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cmy_contract
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from cmy_contract
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="learning.model.CmyContract">
    insert into cmy_contract (id, create_time, deleted, 
      op_cmy_code, op_cmy_name, op_time, 
      operator_code, operator_name, reserved1, 
      reserved2, reserved3, reserved4, 
      reserved5, signature, version, 
      business_no, contract_code, contract_evidence_url, 
      contract_name, contract_oss_url, contract_record_type, 
      contract_type, is_valid, valid_time, 
      contract_evidence_code)
    values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{deleted,jdbcType=VARCHAR}, 
      #{opCmyCode,jdbcType=VARCHAR}, #{opCmyName,jdbcType=VARCHAR}, #{opTime,jdbcType=VARCHAR}, 
      #{operatorCode,jdbcType=VARCHAR}, #{operatorName,jdbcType=VARCHAR}, #{reserved1,jdbcType=VARCHAR}, 
      #{reserved2,jdbcType=VARCHAR}, #{reserved3,jdbcType=VARCHAR}, #{reserved4,jdbcType=BIGINT}, 
      #{reserved5,jdbcType=BIGINT}, #{signature,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, 
      #{businessNo,jdbcType=VARCHAR}, #{contractCode,jdbcType=VARCHAR}, #{contractEvidenceUrl,jdbcType=VARCHAR}, 
      #{contractName,jdbcType=VARCHAR}, #{contractOssUrl,jdbcType=VARCHAR}, #{contractRecordType,jdbcType=VARCHAR}, 
      #{contractType,jdbcType=VARCHAR}, #{isValid,jdbcType=VARCHAR}, #{validTime,jdbcType=VARCHAR}, 
      #{contractEvidenceCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="learning.model.CmyContract">
    insert into cmy_contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="opCmyCode != null">
        op_cmy_code,
      </if>
      <if test="opCmyName != null">
        op_cmy_name,
      </if>
      <if test="opTime != null">
        op_time,
      </if>
      <if test="operatorCode != null">
        operator_code,
      </if>
      <if test="operatorName != null">
        operator_name,
      </if>
      <if test="reserved1 != null">
        reserved1,
      </if>
      <if test="reserved2 != null">
        reserved2,
      </if>
      <if test="reserved3 != null">
        reserved3,
      </if>
      <if test="reserved4 != null">
        reserved4,
      </if>
      <if test="reserved5 != null">
        reserved5,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="businessNo != null">
        business_no,
      </if>
      <if test="contractCode != null">
        contract_code,
      </if>
      <if test="contractEvidenceUrl != null">
        contract_evidence_url,
      </if>
      <if test="contractName != null">
        contract_name,
      </if>
      <if test="contractOssUrl != null">
        contract_oss_url,
      </if>
      <if test="contractRecordType != null">
        contract_record_type,
      </if>
      <if test="contractType != null">
        contract_type,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="validTime != null">
        valid_time,
      </if>
      <if test="contractEvidenceCode != null">
        contract_evidence_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="opCmyCode != null">
        #{opCmyCode,jdbcType=VARCHAR},
      </if>
      <if test="opCmyName != null">
        #{opCmyName,jdbcType=VARCHAR},
      </if>
      <if test="opTime != null">
        #{opTime,jdbcType=VARCHAR},
      </if>
      <if test="operatorCode != null">
        #{operatorCode,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null">
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="reserved1 != null">
        #{reserved1,jdbcType=VARCHAR},
      </if>
      <if test="reserved2 != null">
        #{reserved2,jdbcType=VARCHAR},
      </if>
      <if test="reserved3 != null">
        #{reserved3,jdbcType=VARCHAR},
      </if>
      <if test="reserved4 != null">
        #{reserved4,jdbcType=BIGINT},
      </if>
      <if test="reserved5 != null">
        #{reserved5,jdbcType=BIGINT},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="businessNo != null">
        #{businessNo,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null">
        #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractEvidenceUrl != null">
        #{contractEvidenceUrl,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null">
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractOssUrl != null">
        #{contractOssUrl,jdbcType=VARCHAR},
      </if>
      <if test="contractRecordType != null">
        #{contractRecordType,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null">
        #{contractType,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=VARCHAR},
      </if>
      <if test="validTime != null">
        #{validTime,jdbcType=VARCHAR},
      </if>
      <if test="contractEvidenceCode != null">
        #{contractEvidenceCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="learning.model.CmyContract">
    update cmy_contract
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="opCmyCode != null">
        op_cmy_code = #{opCmyCode,jdbcType=VARCHAR},
      </if>
      <if test="opCmyName != null">
        op_cmy_name = #{opCmyName,jdbcType=VARCHAR},
      </if>
      <if test="opTime != null">
        op_time = #{opTime,jdbcType=VARCHAR},
      </if>
      <if test="operatorCode != null">
        operator_code = #{operatorCode,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null">
        operator_name = #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="reserved1 != null">
        reserved1 = #{reserved1,jdbcType=VARCHAR},
      </if>
      <if test="reserved2 != null">
        reserved2 = #{reserved2,jdbcType=VARCHAR},
      </if>
      <if test="reserved3 != null">
        reserved3 = #{reserved3,jdbcType=VARCHAR},
      </if>
      <if test="reserved4 != null">
        reserved4 = #{reserved4,jdbcType=BIGINT},
      </if>
      <if test="reserved5 != null">
        reserved5 = #{reserved5,jdbcType=BIGINT},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="businessNo != null">
        business_no = #{businessNo,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null">
        contract_code = #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="contractEvidenceUrl != null">
        contract_evidence_url = #{contractEvidenceUrl,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null">
        contract_name = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractOssUrl != null">
        contract_oss_url = #{contractOssUrl,jdbcType=VARCHAR},
      </if>
      <if test="contractRecordType != null">
        contract_record_type = #{contractRecordType,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null">
        contract_type = #{contractType,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=VARCHAR},
      </if>
      <if test="validTime != null">
        valid_time = #{validTime,jdbcType=VARCHAR},
      </if>
      <if test="contractEvidenceCode != null">
        contract_evidence_code = #{contractEvidenceCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="learning.model.CmyContract">
    update cmy_contract
    set create_time = #{createTime,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=VARCHAR},
      op_cmy_code = #{opCmyCode,jdbcType=VARCHAR},
      op_cmy_name = #{opCmyName,jdbcType=VARCHAR},
      op_time = #{opTime,jdbcType=VARCHAR},
      operator_code = #{operatorCode,jdbcType=VARCHAR},
      operator_name = #{operatorName,jdbcType=VARCHAR},
      reserved1 = #{reserved1,jdbcType=VARCHAR},
      reserved2 = #{reserved2,jdbcType=VARCHAR},
      reserved3 = #{reserved3,jdbcType=VARCHAR},
      reserved4 = #{reserved4,jdbcType=BIGINT},
      reserved5 = #{reserved5,jdbcType=BIGINT},
      signature = #{signature,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      business_no = #{businessNo,jdbcType=VARCHAR},
      contract_code = #{contractCode,jdbcType=VARCHAR},
      contract_evidence_url = #{contractEvidenceUrl,jdbcType=VARCHAR},
      contract_name = #{contractName,jdbcType=VARCHAR},
      contract_oss_url = #{contractOssUrl,jdbcType=VARCHAR},
      contract_record_type = #{contractRecordType,jdbcType=VARCHAR},
      contract_type = #{contractType,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=VARCHAR},
      valid_time = #{validTime,jdbcType=VARCHAR},
      contract_evidence_code = #{contractEvidenceCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>